2024-09-30 17:38:11.597765: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-09-30 17:38:11.597823: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-09-30 17:38:11.598732: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-09-30 17:38:11.603416: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-09-30 17:38:12.226279: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-09-30 17:38:13.019504: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.039973: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.040051: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
Num GPUs Available:  1
all        images: 12379
train      images: 11232
validation images: 1147
train relationships:      3066
validation relationships: 296
2024-09-30 17:38:13.505750: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.505849: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.505905: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.708191: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.708344: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.708376: I tensorflow/core/common_runtime/gpu/gpu_device.cc:2022] Could not identify NUMA node of platform GPU id 0, defaulting to 0.  Your kernel may not have been built with NUMA support.
2024-09-30 17:38:13.708426: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node
Your kernel may have been built without NUMA support.
2024-09-30 17:38:13.708463: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1929] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 21458 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 4090, pci bus id: 0000:01:00.0, compute capability: 8.9
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                Output Shape                 Param #   Connected to                  
==================================================================================================
 input_1 (InputLayer)        [(None, 224, 224, 3)]        0         []                            
                                                                                                  
 input_2 (InputLayer)        [(None, 224, 224, 3)]        0         []                            
                                                                                                  
 vggface_resnet50 (Function  (None, None, None, 2048)     2356115   ['input_1[0][0]',             
 al)                                                      2          'input_2[0][0]']             
                                                                                                  
 global_max_pooling2d (Glob  (None, 2048)                 0         ['vggface_resnet50[0][0]']    
 alMaxPooling2D)                                                                                  
                                                                                                  
 global_average_pooling2d (  (None, 2048)                 0         ['vggface_resnet50[0][0]']    
 GlobalAveragePooling2D)                                                                          
                                                                                                  
 global_max_pooling2d_1 (Gl  (None, 2048)                 0         ['vggface_resnet50[1][0]']    
 obalMaxPooling2D)                                                                                
                                                                                                  
 global_average_pooling2d_1  (None, 2048)                 0         ['vggface_resnet50[1][0]']    
  (GlobalAveragePooling2D)                                                                        
                                                                                                  
 concatenate (Concatenate)   (None, 4096)                 0         ['global_max_pooling2d[0][0]',
                                                                     'global_average_pooling2d[0][
                                                                    0]']                          
                                                                                                  
 concatenate_1 (Concatenate  (None, 4096)                 0         ['global_max_pooling2d_1[0][0]
 )                                                                  ',                            
                                                                     'global_average_pooling2d_1[0
                                                                    ][0]']                        
                                                                                                  
 multiply_1 (Multiply)       (None, 4096)                 0         ['concatenate[0][0]',         
                                                                     'concatenate[0][0]']         
                                                                                                  
 multiply_2 (Multiply)       (None, 4096)                 0         ['concatenate_1[0][0]',       
                                                                     'concatenate_1[0][0]']       
                                                                                                  
 subtract (Subtract)         (None, 4096)                 0         ['concatenate[0][0]',         
                                                                     'concatenate_1[0][0]']       
                                                                                                  
 subtract_1 (Subtract)       (None, 4096)                 0         ['multiply_1[0][0]',          
                                                                     'multiply_2[0][0]']          
                                                                                                  
 multiply (Multiply)         (None, 4096)                 0         ['subtract[0][0]',            
                                                                     'subtract[0][0]']            
                                                                                                  
 multiply_3 (Multiply)       (None, 4096)                 0         ['concatenate[0][0]',         
                                                                     'concatenate_1[0][0]']       
                                                                                                  
 concatenate_2 (Concatenate  (None, 12288)                0         ['subtract_1[0][0]',          
 )                                                                   'multiply[0][0]',            
                                                                     'multiply_3[0][0]']          
                                                                                                  
 dense (Dense)               (None, 100)                  1228900   ['concatenate_2[0][0]']       
                                                                                                  
 dropout (Dropout)           (None, 100)                  0         ['dense[0][0]']               
                                                                                                  
 dense_1 (Dense)             (None, 1)                    101       ['dropout[0][0]']             
                                                                                                  
==================================================================================================
Total params: 24790153 (94.57 MB)
Trainable params: 24737033 (94.36 MB)
Non-trainable params: 53120 (207.50 KB)
__________________________________________________________________________________________________
Epoch 1/30
2024-09-30 17:38:26.404959: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:454] Loaded cuDNN version 8904
2024-09-30 17:38:26.540523: I external/local_tsl/tsl/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory
2024-09-30 17:38:27.064363: I external/local_tsl/tsl/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory
2024-09-30 17:38:28.906145: I external/local_xla/xla/service/service.cc:168] XLA service 0x7fe2b84b1e20 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2024-09-30 17:38:28.906186: I external/local_xla/xla/service/service.cc:176]   StreamExecutor device (0): NVIDIA GeForce RTX 4090, Compute Capability 8.9
2024-09-30 17:38:28.910554: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1727707108.963840  256396 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.

Epoch 1: val_accuracy improved from -inf to 0.56375, saving model to d.h5
.venv/lib/python3.10/site-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
50/50 - 31s - loss: 5.2484 - accuracy: 0.5163 - val_loss: 6.8552 - val_accuracy: 0.5638 - lr: 1.0000e-05 - 31s/epoch - 614ms/step
Epoch 2/30

Epoch 2: val_accuracy improved from 0.56375 to 0.59250, saving model to d.h5
50/50 - 7s - loss: 3.8898 - accuracy: 0.5638 - val_loss: 5.3131 - val_accuracy: 0.5925 - lr: 1.0000e-05 - 7s/epoch - 145ms/step
Epoch 3/30

Epoch 3: val_accuracy improved from 0.59250 to 0.60500, saving model to d.h5
50/50 - 6s - loss: 3.2788 - accuracy: 0.6137 - val_loss: 5.4678 - val_accuracy: 0.6050 - lr: 1.0000e-05 - 6s/epoch - 122ms/step
Epoch 4/30

Epoch 4: val_accuracy did not improve from 0.60500
50/50 - 5s - loss: 2.8257 - accuracy: 0.6150 - val_loss: 4.6640 - val_accuracy: 0.5962 - lr: 1.0000e-05 - 5s/epoch - 107ms/step
Epoch 5/30

Epoch 5: val_accuracy did not improve from 0.60500
50/50 - 5s - loss: 2.4436 - accuracy: 0.6325 - val_loss: 4.3050 - val_accuracy: 0.5850 - lr: 1.0000e-05 - 5s/epoch - 107ms/step
Epoch 6/30

Epoch 6: val_accuracy did not improve from 0.60500
50/50 - 5s - loss: 2.0375 - accuracy: 0.6325 - val_loss: 3.5524 - val_accuracy: 0.5900 - lr: 1.0000e-05 - 5s/epoch - 108ms/step
Epoch 7/30

Epoch 7: val_accuracy improved from 0.60500 to 0.62125, saving model to d.h5
50/50 - 6s - loss: 1.6245 - accuracy: 0.6675 - val_loss: 3.4543 - val_accuracy: 0.6212 - lr: 1.0000e-05 - 6s/epoch - 122ms/step
Epoch 8/30

Epoch 8: val_accuracy did not improve from 0.62125
50/50 - 7s - loss: 1.6168 - accuracy: 0.6550 - val_loss: 3.9934 - val_accuracy: 0.6162 - lr: 1.0000e-05 - 7s/epoch - 132ms/step
Epoch 9/30

Epoch 9: val_accuracy improved from 0.62125 to 0.67375, saving model to d.h5
50/50 - 6s - loss: 1.1072 - accuracy: 0.7050 - val_loss: 3.7180 - val_accuracy: 0.6737 - lr: 1.0000e-05 - 6s/epoch - 118ms/step
Epoch 10/30

Epoch 10: val_accuracy did not improve from 0.67375
50/50 - 6s - loss: 1.2243 - accuracy: 0.6675 - val_loss: 2.0792 - val_accuracy: 0.6413 - lr: 1.0000e-05 - 6s/epoch - 111ms/step
Epoch 11/30

Epoch 11: val_accuracy improved from 0.67375 to 0.69125, saving model to d.h5
50/50 - 7s - loss: 1.1148 - accuracy: 0.6850 - val_loss: 1.6415 - val_accuracy: 0.6913 - lr: 1.0000e-05 - 7s/epoch - 130ms/step
Epoch 12/30

Epoch 12: val_accuracy did not improve from 0.69125
50/50 - 6s - loss: 0.9763 - accuracy: 0.7200 - val_loss: 1.6016 - val_accuracy: 0.6075 - lr: 1.0000e-05 - 6s/epoch - 119ms/step
Epoch 13/30

Epoch 13: val_accuracy did not improve from 0.69125
50/50 - 7s - loss: 0.9328 - accuracy: 0.7050 - val_loss: 1.3353 - val_accuracy: 0.6913 - lr: 1.0000e-05 - 7s/epoch - 142ms/step
Epoch 14/30

Epoch 14: val_accuracy improved from 0.69125 to 0.73125, saving model to d.h5
50/50 - 6s - loss: 0.8707 - accuracy: 0.7138 - val_loss: 1.2058 - val_accuracy: 0.7312 - lr: 1.0000e-05 - 6s/epoch - 122ms/step
Epoch 15/30

Epoch 15: val_accuracy did not improve from 0.73125
50/50 - 6s - loss: 0.7434 - accuracy: 0.7038 - val_loss: 3.3188 - val_accuracy: 0.6837 - lr: 1.0000e-05 - 6s/epoch - 113ms/step
Epoch 16/30

Epoch 16: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.6836 - accuracy: 0.7425 - val_loss: 2.7908 - val_accuracy: 0.6938 - lr: 1.0000e-05 - 5s/epoch - 108ms/step
Epoch 17/30

Epoch 17: val_accuracy did not improve from 0.73125
50/50 - 6s - loss: 0.6722 - accuracy: 0.7212 - val_loss: 1.4701 - val_accuracy: 0.6875 - lr: 1.0000e-05 - 6s/epoch - 111ms/step
Epoch 18/30

Epoch 18: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.6732 - accuracy: 0.7125 - val_loss: 1.0001 - val_accuracy: 0.6775 - lr: 1.0000e-05 - 5s/epoch - 103ms/step
Epoch 19/30

Epoch 19: val_accuracy did not improve from 0.73125
50/50 - 7s - loss: 0.6257 - accuracy: 0.7188 - val_loss: 0.7855 - val_accuracy: 0.7237 - lr: 1.0000e-05 - 7s/epoch - 133ms/step
Epoch 20/30

Epoch 20: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.5944 - accuracy: 0.7350 - val_loss: 1.3279 - val_accuracy: 0.7175 - lr: 1.0000e-05 - 5s/epoch - 104ms/step
Epoch 21/30

Epoch 21: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.6098 - accuracy: 0.7138 - val_loss: 0.6488 - val_accuracy: 0.7225 - lr: 1.0000e-05 - 5s/epoch - 105ms/step
Epoch 22/30

Epoch 22: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.5384 - accuracy: 0.7550 - val_loss: 0.7919 - val_accuracy: 0.6712 - lr: 1.0000e-05 - 5s/epoch - 109ms/step
Epoch 23/30

Epoch 23: val_accuracy did not improve from 0.73125
50/50 - 6s - loss: 0.5082 - accuracy: 0.7650 - val_loss: 0.7419 - val_accuracy: 0.7038 - lr: 1.0000e-05 - 6s/epoch - 111ms/step
Epoch 24/30

Epoch 24: val_accuracy did not improve from 0.73125
50/50 - 5s - loss: 0.5079 - accuracy: 0.7650 - val_loss: 0.8616 - val_accuracy: 0.7188 - lr: 1.0000e-05 - 5s/epoch - 107ms/step
Epoch 25/30

Epoch 25: val_accuracy improved from 0.73125 to 0.75750, saving model to d.h5
50/50 - 7s - loss: 0.5307 - accuracy: 0.7650 - val_loss: 0.6887 - val_accuracy: 0.7575 - lr: 1.0000e-05 - 7s/epoch - 142ms/step
Epoch 26/30

Epoch 26: val_accuracy did not improve from 0.75750
50/50 - 6s - loss: 0.5006 - accuracy: 0.7788 - val_loss: 0.9684 - val_accuracy: 0.7300 - lr: 1.0000e-05 - 6s/epoch - 110ms/step
Epoch 27/30

Epoch 27: val_accuracy did not improve from 0.75750
50/50 - 5s - loss: 0.5036 - accuracy: 0.7625 - val_loss: 1.1004 - val_accuracy: 0.7337 - lr: 1.0000e-05 - 5s/epoch - 108ms/step
Epoch 28/30

Epoch 28: val_accuracy did not improve from 0.75750
50/50 - 5s - loss: 0.4762 - accuracy: 0.7700 - val_loss: 0.6565 - val_accuracy: 0.7300 - lr: 1.0000e-05 - 5s/epoch - 104ms/step
Epoch 29/30

Epoch 29: val_accuracy did not improve from 0.75750
50/50 - 5s - loss: 0.5381 - accuracy: 0.7487 - val_loss: 0.7477 - val_accuracy: 0.7450 - lr: 1.0000e-05 - 5s/epoch - 109ms/step
Epoch 30/30

Epoch 30: val_accuracy improved from 0.75750 to 0.75875, saving model to d.h5
50/50 - 6s - loss: 0.5026 - accuracy: 0.7613 - val_loss: 0.7951 - val_accuracy: 0.7588 - lr: 1.0000e-05 - 6s/epoch - 124ms/step